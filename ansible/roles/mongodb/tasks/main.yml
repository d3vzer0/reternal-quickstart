
- include_vars: vault.yml

- name: Creating mongodb TLS directory
  file:
    path: "{{ mongodb.tls.path }}"
    state: directory

- name: Create new mongodb private key
  openssl_privatekey:
    path: "{{ mongodb.tls.path }}/privkey.pem"

- name: Generate mongodb CSR
  openssl_csr:
    path: "{{ mongodb.tls.path }}/mongodb.csr"
    privatekey_path: "{{ mongodb.tls.path }}/privkey.pem"
    state_or_province_name: "{{ mongodb.tls.state_or_province_name }}"
    country_name: "{{ mongodb.tls.country_name }}"
    locality_name: "{{ mongodb.tls.locality_name }}"
    common_name: "{{ mongodb.tls.common_name }}"

- name: Generate a mongodb self signed certificate
  openssl_certificate:
    path: "{{ mongodb.tls.path }}/chain.crt"
    privatekey_path: "{{ mongodb.tls.path }}/privkey.pem"
    csr_path: "{{ mongodb.tls.path }}/mongodb.csr"
    provider: ownca
    ownca_path: "{{ ca.path }}/chain.crt"
    ownca_privatekey_path: "{{ ca.path }}/privkey.pem"
    ownca_privatekey_passphrase: "{{ vault.ca.passphrase }}"

- name: Create persistent DB volume
  docker_volume:
    name: mongodb-data

- name: Installing pymongo for DB management
  pip:
    name: pymongo
    state: present

- name: Run mongo container
  docker_container:
    name: mongodb
    image: "mongo:{{ mongodb.tag }}"
    purge_networks: no
    networks_cli_compatible: yes
    state: started
    pull: "{{ mongodb.pull | default('no') }}"
    recreate: "{{ mongodb.recreate | default('no') }}"
    env:
      MONGO_INITDB_ROOT_USERNAME: "{{ mongodb.root_username }}"
      MONGO_INITDB_ROOT_PASSWORD: "{{ vault.mongodb.root_password }}"
      MONGO_INITDB_DATABASE: "{{ mongodb.db }}"
    networks:
      - name: backend_network
        aliases:
          - mongodb
    volumes:
      - mongodb-data:/data/db
    ports:
      - "127.0.0.1:27017:27017"

- name: Create mongodb user and pass for reternal
  # no_log: true
  mongodb_user:
    login_user: "{{ mongodb.root_username }}"
    login_password: "{{ vault.mongodb.root_password }}"
    database: "{{ mongodb.db }}"
    user: "{{ mongodb.username }}"
    password: "{{ vault.mongodb.password }}"
    state: present
    roles: readWrite,dbAdmin
