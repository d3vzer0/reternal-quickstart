- include_vars: vault.yml

- name: Creating proxy TLS directory
  file:
    path: "{{ proxy.tls.path }}"
    state: directory

- name: Create new proxy private key
  openssl_privatekey:
    path: "{{ proxy.tls.path }}/privkey.pem"

- name: Generate proxy CSR
  openssl_csr:
    path: "{{ proxy.tls.path }}/proxy.csr"
    privatekey_path: "{{ proxy.tls.path }}/privkey.pem"
    state_or_province_name: "{{ proxy.tls.state_or_province_name }}"
    country_name: "{{ proxy.tls.country_name }}"
    locality_name: "{{ proxy.tls.locality_name }}"
    common_name: "{{ proxy.tls.common_name }}"

- name: Generate a proxy self signed certificate
  openssl_certificate:
    path: "{{ proxy.tls.path }}/chain.crt"
    privatekey_path: "{{ proxy.tls.path }}/privkey.pem"
    csr_path: "{{ proxy.tls.path }}/proxy.csr"
    provider: ownca
    ownca_path: "{{ ca.path }}/chain.crt"
    ownca_privatekey_path: "{{ ca.path }}/privkey.pem"
    ownca_privatekey_passphrase: "{{ vault.ca.passphrase }}"

- name: Create proxy config directory
  file:
    path: "{{ reternal.install_dir }}/proxy"
    state: directory

- name: Copy Nginx config template
  template:
    src: proxy.conf.j2
    dest: "{{ reternal.install_dir }}/proxy/gateway.conf"

- name: Run Nginx container
  docker_container:
    name: proxy
    image: "nginx:{{ proxy.tag }}"
    state: started
    purge_networks: no
    networks_cli_compatible: yes
    pull: "{{ proxy.pull | default('no') }}"
    recreate: "{{ proxy.recreate | default('yes') }}"
    networks:
      - name: frontend_network
        aliases:
          - proxy
        links:
          - frontend
      - name: backend_network
        aliases:
          - proxy
        links:
          - api
          - c2
    volumes:
      - "{{ reternal.install_dir }}/proxy/gateway.conf:/etc/nginx/conf.d/gateway.conf"
      - "{{ proxy.tls.path }}:/etc/nginx/tls"

    ports:
      - "{{ proxy.port }}:{{ proxy.port }}"
