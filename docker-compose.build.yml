# Example compose file starting all reternal components
# Binds all interface on localhost with their default ports in a custom rtrnal network
# (binding ports to localhost for services other than web and mongo will be removed later)
#
# WARNING: This is compose uses the Development branch. Some components
# do not have authentication enabled yet (mongodb, redis, api).
# Don't be silly and run this when you didn't review this file >:( 
# Replace the example passwords/tokens with something secret, obviously.

# If you're planning on running a development environment. you can use
# this compose to run redis, mongodb,  empireX and empireXbit but start the  other 
# serivces manually for debugging and live reload. Be sure to set/change the following environment variables:
# export RT_EMPIRE_PATH=https://localhost:1337/api/
# export RT_CELERY_BACKEND=redis://:this_should_be_something_secret@localhost:6379/0
# export RT_EMPIRE_USERNAME=3mpire_username_here
# export RT_EMPIRE_PASSWORD=and_empi1re_pass_th3re

version: '2'
services:
  mongodb:
    image: mongo
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb-data:/data/db

  rabbitmq:
    image: bitnami/rabbitmq:latest
    environment:
      - RABBITMQ_USERNAME=${RT_RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RT_RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RT_RABBITMQ_VHOST}
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:5672:5672"

  redis:
    image: bitnami/redis:latest
    environment:
      - REDIS_PASSWORD=${RT_REDIS_PASSWORD}
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:6379:6379"
    
  flower:
    image: mher/flower
    networks:
      - rtn-backend
    environment:
      - CELERY_BROKER_URL=${RT_CELERY_BACKEND}
      - FLOWER_PORT=${RT_FLOWER_PORT}
    ports:
      - "127.0.0.1:8888:8888"

  # api:
  #   container_name: rtapi
  #   image: reternal/api
  #   networks:
  #     - rtn-backend
  #   ports:
  #     - "127.0.0.1:5000:5000"

  c2:
    build: c2
    environment:
      - RT_CELERY_BACKEND=${RT_CELERY_BACKEND}
      - RT_CELERY_BROKER=${RT_CELERY_BROKER}
      - RT_EMPIRE_PATH=${RT_EMPIRE_PATH}
      - RT_EMPIRE_PASSWORD=${RT_EMPIRE_PASSWORD}
      - RT_EMPIRE_USERNAME=${RT_EMPIRE_USERNAME}
    volumes:
      - "./reternal-c2/workers:/home/reternal/workers"
    networks:
      - rtn-backend

  search:
    build: search
    environment:
      - RT_CELERY_BACKEND=${RT_CELERY_BACKEND}
      - RT_CELERY_BROKER=${RT_CELERY_BROKER}
      - RT_SPLUNK_TOKEN=${RT_SPLUNK_TOKEN}
      - RT_SPLUNK_PATH=${RT_SPLUNK_PATH}
    volumes:
      - "./reternal-search/workers:/home/reternal/workers"
    networks:
      - rtn-backend
  
  scheduler:
    build: backend
    environment: 
      - RT_CELERY_BROKER=${RT_CELERY_BROKER}
      - RT_CELERY_BACKEND=${RT_CELERY_BACKEND}
    volumes:
      - "./reternal-backend/workers:/home/reternal/workers"
    networks:
      - rtn-backend
    entrypoint: ["celery", "-A", "workers", "worker", "-Q", "api"]
  
  # Empire3 support for Python 3 is broken atm,  using Empire2 temporarily
  empire2:
    image: empireproject/empire:latest
    # Change command to match the empire password
    command: /bin/sh -c "cd setup && ./cert.sh && pip install pefile requests && cd ../ && ./empire --username ${RT_EMPIRE_USERNAME} --password ${RT_EMPIRE_PASSWORD} --headless --debug  && while sleep 1000; do :; done"
    volumes:
      - "empire2-data:/opt/Empire:rw"
    ports:
      - '127.0.0.1:1337:1337'
    networks:
      - rtn-backend

  empire2bit:
    image: fluent/fluent-bit:latest
    environment:
      - RT_API_TOKEN=${RT_API_TOKEN}
      - RT_API_HOST=${RT_API_HOST}
      - RT_API_PORT=${RT_API_PORT}
      - RT_API_PATH=${RT_API_PATH}
    volumes:
      - "empire2-data:/empire:ro"
      - "./pipeline/fluentbit/empire2/input.conf:/fluent-bit/etc/fluent-bit.conf:ro"
      - "./pipeline/fluentbit/empire2/parser.conf:/fluent-bit/etc/parser.conf:ro"
    networks:
      - rtn-backend

  # Test machine to deploy payload :)
  victim:
    image: python:2.7-slim
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - rtn-backend

  # Some optional services if you would like to use Empire 3 or integrate with Elasticsearch
  #
  # placeholder for when empire 3 issues are fixed
  # empire3bit:
  #   container_name: empire3bit
  #   image: fluent/fluent-bit:latest
  #   volumes:
  #     - "empire3-data:/empire:ro"
  #     - "./pipeline/fluentbit/empire3/input.conf:/fluent-bit/etc/fluent-bit.conf:ro"
  #     - "./pipeline/fluentbit/empire3/parser.conf:/fluent-bit/etc/parser.conf:ro"
  #   networks:
  #     - rtn-backend

  # empire3:
  #   container_name: empire3
  #   image: bcsecurity/empire:latest
  #   # Change command to match the empire password
  #   command: /bin/bash -c "cd /empire/setup && ./cert.sh && cd ../ && ./empire --username 3mpire_username_here --password and_empi1re_pass_th3re --headless --debug && while sleep 1000; do :; done"
  #   volumes:
  #     - "empire3-data:/empire:rw"
  #   expose:
  #     - 1337
  #   ports:
  #     - '127.0.0.1:1337:1337'
  #   networks:
  #     - rtn-backend
  
  # Same machine but for Py3
  # victim:
  #   container_name: victim
  #   image: python:3.7-slim
  #   command: /bin/sh -c "while sleep 1000; do :; done"
  #   networks:
  #     - rtn-backend
      
volumes:
  empire2-data:
  # empire3-data:
  mongodb-data:
      
networks:
  rtn-backend:
    driver: bridge
