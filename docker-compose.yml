# Example compose file starting all reternal components
# Binds all interface on localhost with their default ports in a custom rtrnal network
#
# WARNING: This is compose uses the Development branch. Some components
# do not have authentication enabled yet (mongodb, redis).
# Don't be silly and run this when you didn't review this file >:(

version: '2'
services:

  mongodb:
    image: mongo
    restart: unless-stopped
    # Placeholder to automatically creating random mongodb users/pass for later release
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: ""
      # MONGO_INITDB_ROOT_PASSWORD: ""
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb-data:/data/db

  redis:
    image: redis
    restart: unless-stopped
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:6379:6379"

  api:
    build: ./backend
    depends_on:
      - mongodb
      - redis-service
    networks:
      - rtn-frontend
      - rtn-backend
    ports:
      - "127.0.0.1:5000:5000"

    # JWT and Flask secrets are automatically generated by management script
    environment:
      JWT_SECRET: ""
      FLASK_SECRET: ""
      # Set below value to IP/Host where the UI will be running
      CORS_DOMAIN: "http://localhost"
      # Set below value to IP/Host:Port/api/v1/ping to where C2 module will be running

  ui:
    build: 
      context: ./ui
      args:
        # Set below values to IP/Host where the API will be running
        VUE_APP_BASEAPI: "http://127.0.0.1:5000/api/v1"
        VUE_APP_SOCKETHOST: "http://127.0.0.1:5000"
    depends_on:
      - api
    networks:
      - rtn-frontend
    volumes:
      - "./navigator-reternal.json:/usr/share/nginx/html/mitre-navigator/assets/config.json"
    ports:
      - "127.0.0.1:80:80"

  c2:
    build: ../reternal-c2
    depends_on:
      - redis-service
    volumes:
      - "/Users/jdreijer/Documents/Code/Github/reternal/reternal-c2:/reternal-c2"

    networks:
      - rtn-backend

  empire:
    image: empireproject/empire:latest
    ports:
      - 127.0.0.1:1337:1337
    networks:
      - rtn-backend

volumes:
  mongodb-data:
    driver: local

networks: 
  rtn-frontend:
    driver: bridge
  rtn-backend:
    driver: bridge
