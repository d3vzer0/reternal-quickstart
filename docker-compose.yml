# Example compose file starting all reternal components
# Binds all interface on localhost with their default ports in a custom rtrnal network
#
# WARNING: This is compose uses the Development branch. Some components
# do not have authentication enabled (mongodb, redis, flask-backend).
# Don't be silly and run this when you didn't review the Dev branch code >:(

version: '2'
services:

  mongodb:
    image: mongo
    restart: unless-stopped
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb-data:/data/db


  redis-service:
    image: redis
    restart: unless-stopped
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:6379:6379"


  api:
    build: ./backend
    depends_on:
      - mongodb
      - redis-service
    networks:
      - rtn-frontend
      - rtn-backend
    ports:
      - "127.0.0.1:5000:5000"

    # Set the JWT_SECRET and FLASK_SECRET with... something secret obviously
    environment:
      JWT_SECRET: ""
      FLASK_SECRET: ""


  api-socket:
    build: ./backend
    depends_on:
      - redis-service
    networks:
      - rtn-backend

    # Set the JWT_SECRET and FLASK_SECRET with... something secret obviously
    environment:
      JWT_SECRET: ""
      FLASK_SECRET: ""
    command: ["celery", "-A", "app.tasks.listener.celery", "worker", "-Q", "api"]


  compiler:
    build: ./agent
    depends_on:
      - redis-service
      - api
    networks:
      - rtn-backend


  ui:
      build: ./ui
      depends_on:
        - api
      networks:
        - rtn-frontend
      ports:
      - "127.0.0.1:80:80"

  c2:
    build: ./c2
    depends_on:
      - redis-service
      - mongodb

    # Set the C2_SECRET with... something secret obviously
    environment:
      C2_SECRET: ""
      C2_PORT: 9000
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:9000:9000"

volumes:
  mongodb-data:
    driver: local

networks: 
  rtn-frontend:
    driver: bridge
  rtn-backend:
    driver: bridge
