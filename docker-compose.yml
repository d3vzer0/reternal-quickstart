# Example compose file starting all reternal components
# Binds all interface on localhost with their default ports in a custom rtrnal network
#
# WARNING: This is compose uses the Development branch. Some components
# do not have authentication enabled yet (mongodb, redis).
# Don't be silly and run this when you didn't review this file >:(

version: '2'
services:
  mongodb:
    container_name: mongodb
    image: mongo
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb-data:/data/db

  redis:
    container_name: redis
    image: bitnami/redis:latest
    environment:
      - REDIS_PASSWORD=this_should_be_something_secret
    networks:
      - rtn-backend
    ports:
      - "127.0.0.1:6379:6379"

  # api:
  #   container_name: rtapi
  #   image: reternal/api
  #   networks:
  #     - rtn-backend
  #   ports:
  #     - "127.0.0.1:5000:5000"

  c2:
    container_name: rtc2
    build: c2
    environment:
      - RT_CELERY_BACKEND=redis://:this_should_be_something_secret@redis:6379/0
      # Replace below with something unique, also change for the empire service
      - RT_EMPIRE_PATH=https://empire3:1337/api/
      - RT_EMPIRE_PASSWORD=and_empi1re_pass_th3re
      - RT_EMPIRE_USERNAME=3mpire_username_here
    networks:
      - rtn-backend


  # For Elastic integration
  # logstash:
  #   container_name: logstash
  #   image: docker.elastic.co/logstash/logstash:7.6.2
  #   environment:
  #     - LS_JAVA_OPTS=-Xms256m -Xmx256m
  #     - XPACK_MONITORING_ENABLED=false
  #   networks:
  #     - rtn-backend
  #   volumes:
  #     - "./pipeline/logstash/:/usr/share/logstash/pipeline/:ro"

  # empire3beat:
  #   container_name: empire3beat
  #   image: docker.elastic.co/beats/filebeat:7.6.2
  #   networks:
  #     - rtn-backend
  #   volumes:
  #     - ./pipeline/beats/empire3.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - "empire-data:/empire:ro"
  
  # Empire3 code is broken for Python implants (using 2 instead)
  empire2:
    image: empireproject/empire:latest
    # Change command to match the empire password
    command: /bin/sh -c "cd setup && ./cert.sh && pip install pefile requests && cd ../ && ./empire --username 3mpire_username_here --password and_empi1re_pass_th3re --headless --debug  && while sleep 1000; do :; done"
    volumes:
      - "empire2-data:/opt/Empire:rw"
    expose:
      - 1337
    ports:
      - '127.0.0.1:1337:1337'
    networks:
      - rtn-backend

  empire2bit:
    container_name: empire2bit
    image: fluent/fluent-bit:latest
    volumes:
      - "empire2-data:/empire:ro"
      - "./pipeline/fluentbit/empire2/input.conf:/fluent-bit/etc/fluent-bit.conf:ro"
      - "./pipeline/fluentbit/empire2/parser.conf:/fluent-bit/etc/parser.conf:ro"
    networks:
      - rtn-backend
      
  # placeholder for when empire 3 issues are fixed
  # empire3bit:
  #   container_name: empire3bit
  #   image: fluent/fluent-bit:latest
  #   volumes:
  #     - "empire3-data:/empire:ro"
  #     - "./pipeline/fluentbit/empire3/input.conf:/fluent-bit/etc/fluent-bit.conf:ro"
  #     - "./pipeline/fluentbit/empire3/parser.conf:/fluent-bit/etc/parser.conf:ro"
  #   networks:
  #     - rtn-backend

  # empire3:
  #   container_name: empire3
  #   image: bcsecurity/empire:latest
  #   # Change command to match the empire password
  #   command: /bin/bash -c "cd /empire/setup && ./cert.sh && cd ../ && ./empire --username 3mpire_username_here --password and_empi1re_pass_th3re --headless --debug && while sleep 1000; do :; done"
  #   volumes:
  #     - "empire3-data:/empire:rw"
  #   expose:
  #     - 1337
  #   ports:
  #     - '127.0.0.1:1337:1337'
  #   networks:
  #     - rtn-backend


  # Test machine to deploy payload :)
  victim:
    container_name: victim
    image: python:2.7-slim
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - rtn-backend

  # Same machine but for Py3
  # victim:
  #   container_name: victim
  #   image: python:3.7-slim
  #   command: /bin/sh -c "while sleep 1000; do :; done"
  #   networks:
  #     - rtn-backend
      
volumes:
  empire2-data:
  empire3-data:
  mongodb-data:
      
networks:
  rtn-backend:
    driver: bridge
